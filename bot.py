import os
import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InputFile
from datetime import datetime, timedelta
from dotenv import load_dotenv

# .env —Ñ–∞–π–ª–∏–¥–∞–Ω —Ç–æ–∫–µ–Ω–Ω–∏ —é–∫–ª–∞—à
load_dotenv()
API_TOKEN = os.getenv("BOT_TOKEN")

# –ë–æ—Ç –≤–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–Ω–∏ —è—Ä–∞—Ç–∏—à
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –•–æ—Ç–∏—Ä–∞–¥–∞ –∞–¥–º–∏–Ω –∫–∞—Ä—Ç–∞–ª–∞—Ä–∏ –≤–∞ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ä—É—Ö—Å–∞—Ç–ª–∞—Ä–∏
admin_cards = {}
user_access = {}

# /start –±—É–π—Ä—É“ì–∏
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.reply(
        "üëã –ü—É–ª –¢—û–ª–æ–≤ –±–æ—Ç–≥–∞ —Ö—É—à –∫–µ–ª–∏–±—Å–∏–∑!\n"
        "–ë—É –±–æ—Ç –æ—Ä“õ–∞–ª–∏ –≥—É—Ä—É“≥–≥–∞ —Ä–µ–∫–ª–∞–º–∞ –±–µ—Ä–∏—à —É—á—É–Ω —Ç—û–ª–æ–≤ “õ–∏–ª–∏–Ω–≥.\n\n"
        "/setcard - –∫–∞—Ä—Ç–∞ “õ—û—à–∏—à\n"
        "/pay - —Ç—û–ª–æ–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–∏–Ω–∏ —é–±–æ—Ä–∏—à"
    )

# /setcard –±—É–π—Ä—É“ì–∏: –∞–¥–º–∏–Ω –∫–∞—Ä—Ç–∞–Ω–∏ “õ—û—à–∞–¥–∏
@dp.message_handler(commands=['setcard'])
async def set_card(message: types.Message):
    if message.chat.type != "supergroup":
        await message.reply("‚ùó –ë—É –±—É–π—Ä—É“õ–Ω–∏ —Ñ–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ –∏—à–ª–∞—Ç–∏–Ω–≥.")
        return
    args = message.get_args()
    if not args:
        await message.reply("–ò–ª—Ç–∏–º–æ—Å, –∫–∞—Ä—Ç–∞–Ω–∏ /setcard 1234xxxx... —à–∞–∫–ª–∏–¥–∞ –∫–∏—Ä–∏—Ç–∏–Ω–≥.")
        return
    admin_cards[message.chat.id] = {
        "admin_id": message.from_user.id,
        "card_number": args
    }
    await message.reply(f"üí≥ –ö–∞—Ä—Ç–∞ —Å–∞“õ–ª–∞–Ω–¥–∏: {args}")

# /pay –±—É–π—Ä—É“ì–∏: —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —é–±–æ—Ä–∏—à
@dp.message_handler(commands=['pay'])
async def pay_handler(message: types.Message):
    if message.chat.type != "supergroup":
        await message.reply("‚ùó –ë—É –±—É–π—Ä—É“õ–Ω–∏ —Ñ–∞“õ–∞—Ç –≥—É—Ä—É“≥–¥–∞ –∏—à–ª–∞—Ç–∏–Ω–≥.")
        return
    if message.reply_to_message and message.reply_to_message.photo:
        if message.chat.id in admin_cards:
            admin_id = admin_cards[message.chat.id]["admin_id"]
            file_id = message.reply_to_message.photo[-1].file_id
            await bot.send_photo(admin_id, file_id, caption=f"üßæ –Ø–Ω–≥–∏ —Ç—û–ª–æ–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–∏: @{message.from_user.username or message.from_user.id}")
            await message.reply("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —é–±–æ—Ä–∏–ª–¥–∏, –∞–¥–º–∏–Ω —Ç–∞—Å–¥–∏“ì–∏–Ω–∏ –∫—É—Ç–∏–± —Ç—É—Ä–∏–Ω–≥.")
        else:
            await message.reply("‚ùå –ê–¥–º–∏–Ω “≥–∞–ª–∏ –∫–∞—Ä—Ç–∞ —û—Ä–Ω–∞—Ç–º–∞–≥–∞–Ω.")
    else:
        await message.reply("üì∏ –ò–ª—Ç–∏–º–æ—Å, —Ä–∞—Å–º–≥–∞ –∂–∞–≤–æ–± —Å–∏—Ñ–∞—Ç–∏–¥–∞ /pay –±—É–π—Ä—É“ì–∏–Ω–∏ —ë–∑–∏–Ω–≥.")

# /approve –±—É–π—Ä—É“ì–∏: –∞–¥–º–∏–Ω —Ç–æ–º–æ–Ω–∏–¥–∞–Ω —Ç–∞—Å–¥–∏“õ–ª–∞—à
@dp.message_handler(commands=['approve'])
async def approve_user(message: types.Message):
    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
        user_access[user_id] = datetime.now() + timedelta(days=30)
        await message.reply("‚úÖ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ 1 –æ–π–ª–∏–∫ “≥—É“õ—É“õ –±–µ—Ä–∏–ª–¥–∏.")
    else:
        await message.reply("‚ö†Ô∏è –ò–ª—Ç–∏–º–æ—Å, –∫–∏–º–≥–∞–¥–∏—Ä –∂–∞–≤–æ–± “õ–∏–ª–∏–± /approve —ë–∑–∏–Ω–≥.")

# “≤–∞—Ä “õ–∞–Ω–¥–∞–π —Ö–∞–±–∞—Ä–¥–∞ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ä—É—Ö—Å–∞—Ç–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
@dp.message_handler()
async def check_access(message: types.Message):
    if message.chat.type == "supergroup":
        user_id = message.from_user.id
        if user_id in user_access:
            if datetime.now() > user_access[user_id]:
                del user_access[user_id]
                await message.reply("‚ùå –°–∏–∑–Ω–∏–Ω–≥ 1 –æ–π–ª–∏–∫ “≥—É“õ—É“õ–∏–Ω–≥–∏–∑ —Ç—É–≥–∞–¥–∏.")
        else:
            await message.reply("‚õî –†–µ–∫–ª–∞–º–∞ –±–µ—Ä–∏—à —É—á—É–Ω –∞–≤–≤–∞–ª —Ç—û–ª–æ–≤ “õ–∏–ª–∏–Ω–≥ –≤–∞ —Ç–∞—Å–¥–∏“õ –∫—É—Ç–∏–± —Ç—É—Ä–∏–Ω–≥.")

# –ë–æ—Ç–Ω–∏ –∏—à–≥–∞ —Ç—É—à–∏—Ä–∏—à
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    executor.start_polling(dp, skip_updates=True)

